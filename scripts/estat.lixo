# ! /usr/bin/ksh
# script para fazer a estatística final do que foi encontrado
# formato do input: arquivo de saída do compara
# Usage: estat compara.out genoma.fasta
# saídas: Por flags! flag.estat
if [ -z $2 ];
then
        echo -ne "\nEsse script faz a análise estatística dos dados finais.\n"
        echo -ne "Usage: estat compara.out genoma.fasta\n"
        echo -ne "\nNext time do it right!\n\n"
        exit
fi
input=$1
fasta=$2
flag=(`echo $input | cut -d"." -f 1 | tr "_" "\n"`) #flags presentes
let "nf=${#flag[@]}" #number of flags
onde=(`grep -n ">" $fasta | cut -d":" -f 1`)
let "nonde=${#onde[@]}"
for((i=0;i<nf;i++));
do
	comb[$i]="grep \""${flag[$i]}"\""
	nome[$i]=${flag[$i]}
	num[$i]=$i
done
let "numcomb=nf-1"
for((quant=1;quant<=nf;quant++));
do
	if [ $quant -gt 1 ];
	then
		declare -a a b
		for((l=0;l<numcomb+1;l++));
		do
        		a[$l]=${comb[$l]}
			b[$l]=${nome[$l]}
			numn[$l]=${num[$l]}
		done
		ind=0
		for((l=0;l<numcomb;l++));
		do
			for((m=numn[l]+1;m<nf;m++));
			do
				comb[$ind]=" "${a[$l]}" | grep \""${flag[$m]}"\""
				nome[$ind]=${b[$l]}"_"${flag[$m]}
				num[$ind]=$m
				let "ind=ind+1"
			done
		done
		let "numcomb=ind-1"
		if [ $numcomb -eq -1 ];
		then
			$numcomb=0
		fi
		unset a b
	fi
	let "group=7+quant"
	for((i=0;i<=numcomb;i++)); #nf
	do
#		echo "rodando: " $i
		echo $i ${nome[$i]}
	done
done
echo "done!"
