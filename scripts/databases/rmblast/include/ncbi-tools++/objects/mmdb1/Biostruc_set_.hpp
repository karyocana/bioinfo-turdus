/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 */

/// @file Biostruc_set_.hpp
/// Data storage class.
///
/// This file was generated by application DATATOOL
/// using the following specifications:
/// 'mmdb1.asn'.
///
/// ATTENTION:
///   Don't edit or commit this file into CVS as this file will
///   be overridden (by DATATOOL) without warning!

#ifndef OBJECTS_MMDB1_BIOSTRUC_SET_BASE_HPP
#define OBJECTS_MMDB1_BIOSTRUC_SET_BASE_HPP

// standard includes
#include <serial/serialbase.hpp>

// generated includes
#include <list>

BEGIN_NCBI_SCOPE

#ifndef BEGIN_objects_SCOPE
#  define BEGIN_objects_SCOPE BEGIN_SCOPE(objects)
#  define END_objects_SCOPE END_SCOPE(objects)
#endif
BEGIN_objects_SCOPE // namespace ncbi::objects::


// forward declarations
class CBiostruc;
class CBiostruc_descr;
class CBiostruc_id;


// generated classes

/////////////////////////////////////////////////////////////////////////////
/// A biostruc set is a means to collect ASN.1 data for many biostrucs in 
/// one file, as convenient for application programs.  The object type is not
/// inteded to imply similarity of the biostrucs grouped together.
class NCBI_MMDB1_EXPORT CBiostruc_set_Base : public CSerialObject
{
    typedef CSerialObject Tparent;
public:
    // constructor
    CBiostruc_set_Base(void);
    // destructor
    virtual ~CBiostruc_set_Base(void);

    // type info
    DECLARE_INTERNAL_TYPE_INFO();

    // types
    typedef list< CRef< CBiostruc_id > > TId;
    typedef list< CRef< CBiostruc_descr > > TDescr;
    typedef list< CRef< CBiostruc > > TBiostrucs;

    // getters
    // setters

    /// optional
    /// typedef list< CRef< CBiostruc_id > > TId
    ///  Check whether the Id data member has been assigned a value.
    bool IsSetId(void) const;
    /// Check whether it is safe or not to call GetId method.
    bool CanGetId(void) const;
    void ResetId(void);
    const TId& GetId(void) const;
    TId& SetId(void);

    /// optional
    /// typedef list< CRef< CBiostruc_descr > > TDescr
    ///  Check whether the Descr data member has been assigned a value.
    bool IsSetDescr(void) const;
    /// Check whether it is safe or not to call GetDescr method.
    bool CanGetDescr(void) const;
    void ResetDescr(void);
    const TDescr& GetDescr(void) const;
    TDescr& SetDescr(void);

    /// mandatory
    /// typedef list< CRef< CBiostruc > > TBiostrucs
    ///  Check whether the Biostrucs data member has been assigned a value.
    bool IsSetBiostrucs(void) const;
    /// Check whether it is safe or not to call GetBiostrucs method.
    bool CanGetBiostrucs(void) const;
    void ResetBiostrucs(void);
    const TBiostrucs& GetBiostrucs(void) const;
    TBiostrucs& SetBiostrucs(void);

    /// Reset the whole object
    virtual void Reset(void);


private:
    // Prohibit copy constructor and assignment operator
    CBiostruc_set_Base(const CBiostruc_set_Base&);
    CBiostruc_set_Base& operator=(const CBiostruc_set_Base&);

    // data
    Uint4 m_set_State[1];
    list< CRef< CBiostruc_id > > m_Id;
    list< CRef< CBiostruc_descr > > m_Descr;
    list< CRef< CBiostruc > > m_Biostrucs;
};






///////////////////////////////////////////////////////////
///////////////////// inline methods //////////////////////
///////////////////////////////////////////////////////////
inline
bool CBiostruc_set_Base::IsSetId(void) const
{
    return ((m_set_State[0] & 0x3) != 0);
}

inline
bool CBiostruc_set_Base::CanGetId(void) const
{
    return true;
}

inline
const CBiostruc_set_Base::TId& CBiostruc_set_Base::GetId(void) const
{
    return m_Id;
}

inline
CBiostruc_set_Base::TId& CBiostruc_set_Base::SetId(void)
{
    m_set_State[0] |= 0x1;
    return m_Id;
}

inline
bool CBiostruc_set_Base::IsSetDescr(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CBiostruc_set_Base::CanGetDescr(void) const
{
    return true;
}

inline
const CBiostruc_set_Base::TDescr& CBiostruc_set_Base::GetDescr(void) const
{
    return m_Descr;
}

inline
CBiostruc_set_Base::TDescr& CBiostruc_set_Base::SetDescr(void)
{
    m_set_State[0] |= 0x4;
    return m_Descr;
}

inline
bool CBiostruc_set_Base::IsSetBiostrucs(void) const
{
    return ((m_set_State[0] & 0x30) != 0);
}

inline
bool CBiostruc_set_Base::CanGetBiostrucs(void) const
{
    return true;
}

inline
const CBiostruc_set_Base::TBiostrucs& CBiostruc_set_Base::GetBiostrucs(void) const
{
    return m_Biostrucs;
}

inline
CBiostruc_set_Base::TBiostrucs& CBiostruc_set_Base::SetBiostrucs(void)
{
    m_set_State[0] |= 0x10;
    return m_Biostrucs;
}

///////////////////////////////////////////////////////////
////////////////// end of inline methods //////////////////
///////////////////////////////////////////////////////////





END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // OBJECTS_MMDB1_BIOSTRUC_SET_BASE_HPP
