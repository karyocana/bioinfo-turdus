# ! /usr/bin/ksh
# Script para encontrar os TEs e marcá-los depois do compara
# Usage: acha_tes arq.compara
if [ -z $1 ];
then
        echo -ne "\nThis script runs acha_pos.\n"
        echo -ne "Usage: acha_tes arq.compara\n\nNext time do it right!\n\n"
        exit
fi
dir=`pwd`
n1=`echo $1 | rev | cut -d'/' -f1 | rev | cut -d'.' -f1`
pre=`date +%s`
insca=$dir"/temp."`date +%s` # arquivo temporario
out=$dir"/"$n1"."tes.final
echo -ne "início "
date
echo "output: "$out
echo -ne "# scaffold\tbegin\tend\tsinal\tconfiança\tfamília(s)\tnúmero_TE\tflag(s)\n" > $out
# pegando scaffolds
sca=(`awk '{print $1}' $1 | grep -v "#" | uniq`)
let "nsca=${#sca[@]}"
# Por scaffold
for((s=0;s<nsca;s++));
do
	# sinal +
	declare -a bng end sin fam flag
        awk '{if ($1 == "'${sca[$s]}'") print $0}' $1 | awk '{if ($4 == "+") print $0}' | sort -k 2 -n > $insca # arquivo com mesmo scaffold e mesmo sinal
        # pegando sequências
	flag=(`grep -v "#" $insca| awk '{$1=$2=$3=$4=$5=$6=""; print $0}'`)
        bng=(`grep -v "#" $insca | awk '{print $2}'`)
        end=(`grep -v "#" $insca  | awk '{print $3}'`)
        sin=(`grep -v "#" $insca  | awk '{print $4}'`)
	conf=(`grep -v "#" $insca  | awk '{print $5}'`)
        fam=(`grep -v "#" $insca  | awk '{print $6}'`)
	nseq=`wc -l $insca | cut -d' ' -f1`
	if [ $nseq -gt 0 ]; #existe TE de sinal +?
        then
		indi=0
		echo -ne "${sca[$s]}\t${bng[0]}\t${end[0]}\t${sin[0]}\t${conf[0]}\t${fam[0]}\t0">> $out
		for((l=indi;l<indi+conf[0];l++));
		do
			echo -ne "\t${flag[$l]}">> $out
		done
		echo >> $out
	fi
	if [ $nseq -gt 1 ];
        then
		count=0
		let "indi=indi+conf[0]"
		for((i=1;i<nseq;i++));
		do
			let "ind=end[i-1]+1"
			if [ ${bng[$i]} -ne $ind ];
			then
				let "count=count+1"
			fi
			echo -ne "${sca[$s]}\t${bng[$i]}\t${end[$i]}\t${sin[$i]}\t${conf[$i]}\t${fam[$i]}\t$count">> $out
			for((l=indi;l<indi+conf[i];l++));
	        	do
	        	        echo -ne "\t${flag[$l]}">> $out
	        	done
			echo >> $out
			let "indi=indi+conf[i]"
		done
	fi
	unset bng end sin fam flag

	# sinal C
	declare -a bng end sin fam flag
	awk '{if ($1 == "'${sca[$s]}'") print $0}' $1 | awk '{if ($4 == "C") print $0}' | sort -k 2 -n > $insca # arquivo com mesmo scaffold e mesmo sinal
        # pegando sequências
	flag=(`grep -v "#" $insca| awk '{$1=$2=$3=$4=$5=$6=""; print $0}'`)
        bng=(`grep -v "#" $insca | awk '{print $2}'`)
        end=(`grep -v "#" $insca  | awk '{print $3}'`)
        sin=(`grep -v "#" $insca  | awk '{print $4}'`)
	conf=(`grep -v "#" $insca  | awk '{print $5}'`)
        fam=(`grep -v "#" $insca  | awk '{print $6}'`)
	nseq=`wc -l $insca | cut -d' ' -f1`
        if [ $nseq -gt 0 ]; #existe TE de sinal +?
        then
		indi=0
		let "count=count+1"
		echo -ne "${sca[$s]}\t${bng[0]}\t${end[0]}\t${sin[0]}\t${conf[0]}\t${fam[0]}\t$count">> $out
		for((l=indi;l<indi+conf[0];l++));
        	do
        	        echo -ne "\t${flag[$l]}">> $out
        	done
        	echo >> $out
	fi
	if [ $nseq -gt 1 ];
        then
        	let "indi=indi+conf[0]"
        	for((i=1;i<nseq;i++));
        	do
        	        let "ind=end[i-1]+1"
        	        if [ ${bng[$i]} -ne $ind ];
			then
        	                let "count=count+1"
        	        fi
			echo -ne "${sca[$s]}\t${bng[$i]}\t${end[$i]}\t${sin[$i]}\t${conf[$i]}\t${fam[$i]}\t$count">> $out
        	        for((l=indi;l<indi+conf[i];l++));
        	        do
        	                echo -ne "\t${flag[$l]}">> $out
        	        done
        	        echo >> $out
        	        let "indi=indi+conf[i]"
        	done
	fi
	unset bng end sin fam flag
done
rm $insca
totalp=0
totalc=0
# Em números
for((s=0;s<nsca;s++));
do
	nc=`awk '{if ($1 == "'${sca[$s]}'") print $0}' $out | awk '{if ($4 == "C") print $7}' | tail -1`
	np=`awk '{if ($1 == "'${sca[$s]}'") print $0}' $out | awk '{if ($4 == "+") print $7}' | tail -1`
	let "nc=nc-np"
	let "np=np+1"
	let "totalp=totalp+np"
        let "totalc=totalc+nc"
	echo ${sca[$s]} "sinal +: "$np "TEs"
	echo ${sca[$s]} "sinal -: "$nc "TEs"
done
let "total=totalp+totalc"
echo "total de TEs de sinal +: "$totalp
echo "total de TEs de sinal -: "$totalc
echo "TOTAL: "$total
echo
date
